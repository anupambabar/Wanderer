<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.wanderer.*" />

	<context:property-placeholder
		location="classpath*:application.properties, classpath*:log4j.properties, classpath*:wanderer-${WANDERER_ENV}.properties" />

	<security:http auto-config="true" use-expressions="true">

		<security:intercept-url pattern="/**" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/j_spring_security_check"
			access="hasRole(${login_url_role})" />
		<security:intercept-url pattern="/secure/**"
			access="hasRole(${user_url_role})" />

		<!-- Form Login -->
		<security:form-login login-page="/"
			login-processing-url="/j_spring_security_check"
			always-use-default-target="true" default-target-url="/api/customer/customerDashboard?id=0"
			authentication-failure-url="/" username-parameter="username"
			password-parameter="password" />

		<!-- Session Management -->
		<security:session-management
			invalid-session-url="/" session-authentication-error-url="/">
			<security:concurrency-control
				expired-url="/logout" max-sessions="1" session-registry-ref="sessionRegistry" />
		</security:session-management>

		<!-- Logout -->
		<security:logout logout-url="/logout"
			success-handler-ref="logoutSuccessHandler" invalidate-session="true"
			delete-cookies="JSESSIONID" />

		<!-- Remember Me -->
		<security:remember-me key="rememberMeKey"
			user-service-ref="userDetailsService" />

		<!-- CSRF -->
		<security:csrf />

		<security:access-denied-handler ref="accessDeniedHandler" />

	</security:http>

	<!-- authentication manager and password hashing -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
	</bean>

	<bean id="userDetailsService" name="userAuthenticationProvider"
		class="com.df.customer.service.CustomUserDetailsService">
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg index="0" value="256" />
	</bean>

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<bean id="accessDeniedHandler" class="com.df.customer.service.AccessDeniedHandlerService" />

	<bean id="logoutSuccessHandler"
		class="com.df.customer.service.CustomLogoutSuccessHandlerService" />

</beans>
