/**
 * 
 */
package com.wanderer.utility.appservices.crypto;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author anupam babar
 *
 */
public class CryptoServiceProvider {

	private static final Logger logger = LoggerFactory.getLogger(CryptoServiceProvider.class);

	public String decrypt(String salt, String iv, String passphrase, String EncryptedText) {
		String decryptedValue = null;
		try {
			byte[] saltBytes = hexStringToByteArray(salt);
			SecretKeySpec sKey = (SecretKeySpec) generateKeyFromPassword(passphrase, saltBytes);
			byte[] ivBytes = hexStringToByteArray(iv);
			IvParameterSpec ivParameterSpec = new IvParameterSpec(ivBytes);
			cipher.init(Cipher.DECRYPT_MODE, sKey, ivParameterSpec);
			byte[] decordedValue = new BASE64Decoder().decodeBuffer(EncryptedText);
			byte[] decValue = cipher.doFinal(decordedValue);
			decryptedValue = new String(decValue);
			// return decryptedValue;
		} catch (Exception e) {
			logger.error("ERROR IN: decrypt");
		}
		return decryptedValue;

	}
}
